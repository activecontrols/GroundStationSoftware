/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE COMMAND_SIMPLE PACKING
package com.MAVLink.pscom;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * Send a simple string command, for rapid prototyping.
 */
public class msg_command_simple extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_COMMAND_SIMPLE = 51880;
    public static final int MAVLINK_MSG_LENGTH = 127;
    private static final long serialVersionUID = MAVLINK_MSG_ID_COMMAND_SIMPLE;

    
    /**
     * Command to send
     */
    @Description("Command to send")
    @Units("")
    public byte command[] = new byte[127];
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_COMMAND_SIMPLE;

        
        for (int i = 0; i < command.length; i++) {
            packet.payload.putByte(command[i]);
        }
                    
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a command_simple message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        
        for (int i = 0; i < this.command.length; i++) {
            this.command[i] = payload.getByte();
        }
                
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_command_simple() {
        this.msgid = MAVLINK_MSG_ID_COMMAND_SIMPLE;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_command_simple( byte[] command) {
        this.msgid = MAVLINK_MSG_ID_COMMAND_SIMPLE;

        this.command = command;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_command_simple( byte[] command, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_COMMAND_SIMPLE;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.command = command;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_command_simple(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_COMMAND_SIMPLE;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

     
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setCommand(String str) {
        int len = Math.min(str.length(), 127);
        for (int i=0; i<len; i++) {
            command[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<127; i++) {            // padding for the rest of the buffer
            command[i] = 0;
        }
    }

    /**
    * Gets the message, formatted as a string
    */
    public String getCommand() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 127; i++) {
            if (command[i] != 0)
                buf.append((char) command[i]);
            else
                break;
        }
        return buf.toString();

    }
                         
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_COMMAND_SIMPLE - sysid:"+sysid+" compid:"+compid+" command:"+command+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_COMMAND_SIMPLE";
    }
}
        